#--------------------------------------------------------------------#
#                          Home Automation                           #
#--------------------------------------------------------------------#
---
services:
  home-assistant:
    image: "ghcr.io/home-assistant/home-assistant:latest"
    container_name: home-assistant
    env_file: .env
    restart: unless-stopped
    volumes:
      - ./data/home-assistant/config:/config
      - /etc/localtime:/etc/localtime:ro
      - /run/dbus:/run/dbus:ro
    devices:
      - /dev/serial/by-id/usb-Silicon_Labs_Sonoff_Zigbee_3.0_USB_Dongle_Plus_0001-if00-port0
    ports:
      - 8123:8123
    privileged: true

#--------------------------------------------------------------------#
#                          Media Streaming                           #
#--------------------------------------------------------------------#
---
services:
  jellyfin:
    image: linuxserver/jellyfin:latest
    container_name: jellyfin
    env_file: .env
    restart: unless-stopped
    volumes:
      - ./data/jellyfin/config:/config
      - /home/s1n7ax/Downloads/Torrent/Movies:/data/movies
      - /home/s1n7ax/Downloads/Torrent/TV:/data/tv
      - /home/s1n7ax/Downloads/Torrent/Music:/data/music
    devices:
      - /dev/dri:/dev/dri
    ports:
      - 8000:8096

  prowlarr:
    image: linuxserver/prowlarr:latest
    container_name: prowlarr
    env_file: .env
    restart: unless-stopped
    volumes:
      - ./data/prowlarr/config:/config
    ports:
      - 9696:9696

  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    env_file: .env
    restart: unless-stopped
    volumes:
      - ./data/radarr/config:/config
      - /home/s1n7ax/Downloads/Torrent/Movies:/movies
      - /home/s1n7ax/Downloads/Torrent/Downloaded:/downloads/Downloaded
    ports:
      - 7878:7878

  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    env_file: .env
    restart: unless-stopped
    volumes:
      - ./data/sonarr/config:/config
      - /home/s1n7ax/Downloads/Torrent/TV:/tv
      - /home/s1n7ax/Downloads/Torrent/Downloaded:/downloads/Downloaded
    ports:
      - 8989:8989

  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    env_file: .env
    restart: unless-stopped
    volumes:
      - ./data/lidarr/config:/config
      - /home/s1n7ax/Downloads/Torrent/Music:/music
      - /home/s1n7ax/Downloads/Torrent/Downloaded:/downloads/Downloaded
    ports:
      - 8686:8686

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    env_file: .env
    restart: unless-stopped
    environment:
      LOG_LEVEL: ${LOG_LEVEL:-info}
      LOG_HTML: ${LOG_HTML:-false}
      CAPTCHA_SOLVER: ${CAPTCHA_SOLVER:-none}
      TZ: Europe/London
    ports:
      - 8191:8191

  qbittorrent:
    image: linuxserver/qbittorrent:latest
    container_name: qbittorrent
    env_file: .env
    restart: unless-stopped
    environment:
      WEBUI_PORT: 8001
    volumes:
      - ./data/qbittorrent/config:/config
      - /home/s1n7ax/Downloads/Torrent:/downloads
    ports:
      - 8001:8001
      - 6881:6881
      - 6881:6881/udp

#--------------------------------------------------------------------#
#                             DNS Server                             #
#--------------------------------------------------------------------#
---
services:
  adguardhome:
    image: adguard/adguardhome:latest
    container_name: adguardhome
    env_file: .env
    restart: unless-stopped
    networks:
      dns-network:
        ipv4_address: 172.20.0.200
    volumes:
      - ./data/adguardhome/workdir:/opt/adguardhome/work
      - ./data/adguardhome/confdir:/opt/adguardhome/conf
    ports:
      - 53:53/tcp
      - 53:53/udp
      - 443:443/tcp
      - 443:443/udp
      - 3000:3000/tcp

  unbound:
    image: madnuttah/unbound:latest
    container_name: unbound
    env_file: .env
    hostname: unbound
    ports:
      - 5335:5335/tcp
      - 5335:5335/udp
    networks:
      dns-network:
        ipv4_address: 172.20.0.253
    environment:
      UNBOUND_UID: 1000
      UNBOUND_GID: 1000
      HEALTHCHECK_PORT: 5335
      EXTENDED_HEALTHCHECK: "true"
      ENABLE_STATS: "true"
    restart: unless-stopped
    healthcheck:
      test: /usr/local/unbound/sbin/healthcheck.sh
      interval: 60s
      retries: 5
      start_period: 15s
      timeout: 30s

networks:
  dns-network:
    driver: bridge
    driver_opts:
      parent: wlan0
    ipam:
      config:
        - subnet: 172.20.0.0/24
          gateway: 172.20.0.1

#--------------------------------------------------------------------#
#                             Monitoring                             #
#--------------------------------------------------------------------#
---
services:
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    user: "${UID:-1000}:${GID:-1000}"
    env_file: .env
    ports:
      - 3001:3000
    volumes:
      - ./data/grafana/config:/var/lib/grafana
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    user: "${UID:-1000}:${GID:-1000}"
    env_file: .env
    command: "--config.file=/etc/prometheus/prometheus.yml"
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./data/prometheus/data:/prometheus
    restart: unless-stopped
    ports:
      - 9090:9090
    depends_on:
      - node-exporter
      - cadvisor

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    env_file: .env
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.rootfs=/rootfs"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"
    expose:
      - 9100

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: cadvisor
    env_file: .env
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg

#--------------------------------------------------------------------#
#                        Container Management                        #
#--------------------------------------------------------------------#
---
services:
  portainer:
    image: portainer/portainer:linux-arm64-2.0.1
    container_name: portainer
    env_file: .env
    restart: unless-stopped
    ports:
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/portainer/data:/data
